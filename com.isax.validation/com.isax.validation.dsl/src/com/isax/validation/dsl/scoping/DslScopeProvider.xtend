/*
 * generated by Xtext
 */
package com.isax.validation.dsl.scoping

import com.isax.validation.dsl.dsl.DefinitionSentence
import com.isax.validation.dsl.dsl.StartOnSentence
import com.isax.validation.dsl.dsl.Validator
import org.eclipse.emf.ecore.EReference
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it 
 * 
 */
class DslScopeProvider extends AbstractDeclarativeScopeProvider {
	def scope_DefinitionSentence_node(DefinitionSentence sentence, EReference reference) {
		val validator = sentence.eContainer as Validator
		val index = validator.sentences.indexOf(sentence)
		Scopes.scopeFor(
			validator.sentences.filter(typeof(DefinitionSentence)).indexed.filter[p | p.key < index].map[p | p.value.target.definition],
			Scopes.scopeFor(
				validator.sentences.filter(typeof(StartOnSentence)).map[s | s.definition]
			)
		)
	}
}