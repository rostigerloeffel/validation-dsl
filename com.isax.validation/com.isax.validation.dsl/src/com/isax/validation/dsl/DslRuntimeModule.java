/*
 * generated by Xtext
 */
package com.isax.validation.dsl;

import org.eclipse.xtext.linking.LinkingScopeProviderBinding;
import org.eclipse.xtext.scoping.IGlobalScopeProvider;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.xbase.compiler.XbaseCompiler;
import org.eclipse.xtext.xbase.typesystem.computation.ITypeComputer;

import com.google.inject.Binder;
import com.isax.validation.dsl.compilation.DslCompiler;
import com.isax.validation.dsl.scoping.DslGlobalScopeProvider;
import com.isax.validation.dsl.scoping.DslScopeProvider;
import com.isax.validation.types.DslTypeComputer;

/**
 * Use this class to register components to be used at runtime / without the
 * Equinox extension registry.
 */
public class DslRuntimeModule extends com.isax.validation.dsl.AbstractDslRuntimeModule {

	@Override
	public Class<? extends IScopeProvider> bindIScopeProvider() {
		return DslScopeProvider.class;
	}

	@Override
	public Class<? extends IGlobalScopeProvider> bindIGlobalScopeProvider() {
		return DslGlobalScopeProvider.class;
	}
	
	@Override
	public void configureLinkingIScopeProvider(Binder binder) {
		binder.bind(IScopeProvider.class).annotatedWith(LinkingScopeProviderBinding.class).to(DslScopeProvider.class);
	}

	public Class<? extends XbaseCompiler> bindXbaseCompiler() {
		return DslCompiler.class;
	}
	
	@Override
	public Class<? extends ITypeComputer> bindITypeComputer() {
		return DslTypeComputer.class;
	}

}
